from kivymd.uix.screen import MDScreen
from kivymd.uix.card import MDCard
from kivymd.uix.boxlayout import MDBoxLayout
from kivymd.uix.button import MDRaisedButton
from kivymd.uix.label import MDLabel
from kivymd.uix.toolbar import MDTopAppBar
from kivy.metrics import dp
from kivy.utils import get_color_from_hex
from utils.session import session

class DashboardScreen(MDScreen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.name = 'dashboard'
        
    def build_ui(self):
        self.clear_widgets()
        
        main_layout = MDBoxLayout(orientation='vertical')
        
        # –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å
        toolbar = MDTopAppBar(
            title="SERVERoff",
            right_action_items=[["logout", lambda x: self.logout()]],
            elevation=10,
            md_bg_color=get_color_from_hex("#FF9800")
        )
        
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
        content = MDBoxLayout(
            orientation='vertical',
            padding=dp(20),
            spacing=dp(20)
        )
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        if session.is_logged_in() and 'first_name' in session.user_data:
            welcome_text = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {session.user_data['first_name']}!"
        else:
            welcome_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SERVERoff!"
            
        welcome_label = MDLabel(
            text=welcome_text,
            halign="center",
            theme_text_color="Primary",
            font_style="H5"
        )
        
        # –ö–∞—Ä—Ç–æ—á–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        info_card = MDCard(
            orientation="vertical",
            padding=dp(20),
            spacing=dp(15),
            size_hint_y=0.3,
            elevation=2,
            radius=[dp(15)]
        )
        
        if session.is_logged_in():
            user_type = "–ö–ª–∏–µ–Ω—Ç" if session.user_data.get('user_type') == 'client' else "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"
            info_text = f"""
–¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞: {user_type}
Email: {session.user_data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}
–¢–µ–ª–µ—Ñ–æ–Ω: {session.user_data.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}
            """
        else:
            info_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É"
            
        info_label = MDLabel(
            text=info_text,
            halign="left",
            theme_text_color="Secondary"
        )
        
        info_card.add_widget(info_label)
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        actions_layout = MDBoxLayout(
            orientation='vertical',
            spacing=dp(15),
            size_hint_y=0.6
        )
        
        if session.is_logged_in():
            # –ü–ï–†–í–û–ï: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –í–ù–£–¢–†–ò —É—Å–ª–æ–≤–∏—è is_logged_in
            # –í —Ä–∞–∑–¥–µ–ª–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–æ–±–∞–≤–∏–º –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏:
            if session.user_data.get('user_type') == 'admin':
                admin_btn = MDRaisedButton(
                    text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#FF0000"),
                    size_hint_y=None,
                    height=dp(50)
                    )
                admin_btn.bind(on_press=lambda x: self.go_to_screen('admin_users'))
    
                orgs_btn = MDRaisedButton(
                    text="üè¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#2196F3"),
                    size_hint_y=None,
                    height=dp(50)
                    )
                orgs_btn.bind(on_press=lambda x: self.go_to_screen('admin_organizations'))
    
                dirs_btn = MDRaisedButton(
                    text="üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#4CAF50"),
                    size_hint_y=None,
                    height=dp(50)
                    )
                dirs_btn.bind(on_press=lambda x: self.go_to_screen('directories'))
    
                actions_layout.add_widget(admin_btn)
                actions_layout.add_widget(orgs_btn)
                actions_layout.add_widget(dirs_btn)
            # –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if session.user_data.get('user_type') == 'client':
                menu_btn = MDRaisedButton(
                    text="üçΩÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#FF9800")
                )
                menu_btn.bind(on_press=lambda x: self.go_to_screen('menu'))
                
                cart_btn = MDRaisedButton(
                    text="üõí –ö–æ—Ä–∑–∏–Ω–∞",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#2196F3")
                )
                cart_btn.bind(on_press=lambda x: self.go_to_screen('cart'))
                
                orders_btn = MDRaisedButton(
                    text="üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#4CAF50")
                )
                orders_btn.bind(on_press=lambda x: self.go_to_screen('orders'))
                
                reviews_btn = MDRaisedButton(
                    text="‚≠ê –û—Ç–∑—ã–≤—ã",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#FF9800")
                )
                reviews_btn.bind(on_press=lambda x: self.go_to_screen('reviews'))
                
                social_btn = MDRaisedButton(
                    text="üåê –°–æ—Ü—Å–µ—Ç–∏",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#FF9800"),
                    size_hint_y=None,
                    height=dp(50)
                )
                social_btn.bind(on_press=lambda x: self.go_to_screen('social'))
                
                settings_btn = MDRaisedButton(
                    text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#9C27B0"),
                    size_hint_y=None,
                    height=dp(50)
                )
                settings_btn.bind(on_press=lambda x: self.go_to_screen('settings'))
                
                profile_btn = MDRaisedButton(
                    text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#9C27B0")
                )
                profile_btn.bind(on_press=lambda x: self.go_to_screen('profile'))
                
                actions_layout.add_widget(menu_btn)
                actions_layout.add_widget(cart_btn)
                actions_layout.add_widget(orders_btn)
                actions_layout.add_widget(reviews_btn)
                actions_layout.add_widget(social_btn)
                actions_layout.add_widget(settings_btn)
                actions_layout.add_widget(profile_btn)
            
            # –í —Ä–∞–∑–¥–µ–ª–µ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –¥–æ–±–∞–≤–∏–º –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏:
            elif session.user_data.get('user_type') == 'organization':
                products_btn = MDRaisedButton(
                    text="üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#FF9800")
                    )
                products_btn.bind(on_press=lambda x: self.go_to_screen('products'))
    
                orders_btn = MDRaisedButton(
                    text="üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#2196F3")
                    )
                orders_btn.bind(on_press=lambda x: self.go_to_screen('org_orders'))
    
                stats_btn = MDRaisedButton(
                    text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#4CAF50")
                    )
                stats_btn.bind(on_press=lambda x: self.go_to_screen('org_stats'))
    
                news_btn = MDRaisedButton(
                    text="üì∞ –ù–æ–≤–æ—Å—Ç–∏",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#9C27B0"),
                    size_hint_y=None,
                    height=dp(50)
                        )
                news_btn.bind(on_press=lambda x: self.go_to_screen('news'))
    
                schedule_btn = MDRaisedButton(
                    text="üïí –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#FF9800"),
                    size_hint_y=None,
                    height=dp(50)
                    )
                schedule_btn.bind(on_press=lambda x: self.go_to_screen('schedule'))
    
                reports_btn = MDRaisedButton(
                    text="üìä –û—Ç—á–µ—Ç—ã",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#2196F3"),
                    size_hint_y=None,
                    height=dp(50)
                    )
                reports_btn.bind(on_press=lambda x: self.go_to_screen('reports'))
    
                settings_btn = MDRaisedButton(
                    text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#9C27B0"),
                    size_hint_y=None,
                    height=dp(50)
                    )
                settings_btn.bind(on_press=lambda x: self.go_to_screen('settings'))
    
                profile_btn = MDRaisedButton(
                    text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å",
                    size_hint_x=0.8,
                    pos_hint={'center_x': 0.5},
                    md_bg_color=get_color_from_hex("#9C27B0")
                    )
                profile_btn.bind(on_press=lambda x: self.go_to_screen('profile'))
    
                actions_layout.add_widget(products_btn)
                actions_layout.add_widget(orders_btn)
                actions_layout.add_widget(stats_btn)
                actions_layout.add_widget(news_btn)
                actions_layout.add_widget(schedule_btn)
                actions_layout.add_widget(reports_btn)
                actions_layout.add_widget(settings_btn)
                actions_layout.add_widget(profile_btn)
        
        content.add_widget(welcome_label)
        content.add_widget(info_card)
        content.add_widget(actions_layout)
        
        main_layout.add_widget(toolbar)
        main_layout.add_widget(content)
        
        self.add_widget(main_layout)
    
    def go_to_screen(self, screen_name):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω"""
        self.manager.current = screen_name
    
    def logout(self):
        from utils.session import session
        session.logout()
        print("–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã")
        self.manager.current = 'login'
    
    def on_enter(self):
        self.build_ui()