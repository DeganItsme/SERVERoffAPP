from kivymd.uix.screen import MDScreen
from kivymd.uix.card import MDCard
from kivymd.uix.boxlayout import MDBoxLayout
from kivymd.uix.button import MDRaisedButton
from kivymd.uix.label import MDLabel
from kivymd.uix.toolbar import MDTopAppBar
from kivymd.uix.dialog import MDDialog
from kivy.metrics import dp
from kivy.utils import get_color_from_hex
from utils.database import db
from utils.session import session

class OrgOrdersScreen(MDScreen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.name = 'org_orders'
        self.dialog = None
        self.build_ui()
    
    def build_ui(self):
        self.clear_widgets()
        
        main_layout = MDBoxLayout(orientation='vertical')
        
        # –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å
        toolbar = MDTopAppBar(
            title="üì¶ –ó–∞–∫–∞–∑—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
            left_action_items=[["arrow-left", lambda x: self.go_back()]],
            elevation=4,
            md_bg_color=get_color_from_hex("#FF9800")
        )
        
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
        from kivymd.uix.scrollview import MDScrollView
        scroll = MDScrollView()
        
        content = MDBoxLayout(
            orientation='vertical',
            padding=dp(20),
            spacing=dp(15),
            size_hint_y=None
        )
        content.bind(minimum_height=content.setter('height'))
        
        # –û—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É
        top_spacer = MDBoxLayout(size_hint_y=None, height=dp(10))
        content.add_widget(top_spacer)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = MDLabel(
            text="–¢–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã:",
            halign="left",
            theme_text_color="Primary",
            font_style="H5",
            size_hint_y=None,
            height=dp(40)
        )
        content.add_widget(title_label)
        
        # –ü—Ä–∏–º–µ—Ä –∑–∞–∫–∞–∑–æ–≤
        orders = [
            {"id": "#1001", "customer": "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", "total": 450, "status": "–ì–æ—Ç–æ–≤–∏—Ç—Å—è", "time": "15:30"},
            {"id": "#1002", "customer": "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞", "total": 320, "status": "–ù–æ–≤—ã–π", "time": "15:45"},
            {"id": "#1003", "customer": "–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤", "total": 550, "status": "–í –¥–æ—Å—Ç–∞–≤–∫–µ", "time": "16:00"}
        ]
        
        for order in orders:
            order_card = MDCard(
                orientation="vertical",
                padding=dp(15),
                size_hint_y=None,
                height=dp(140),
                elevation=2,
                radius=[dp(12)]
            )
            
            order_info = f"""–ó–∞–∫–∞–∑: {order['id']}
–ö–ª–∏–µ–Ω—Ç: {order['customer']}
–°—É–º–º–∞: {order['total']}‚ÇΩ
–°—Ç–∞—Ç—É—Å: {order['status']}
–í—Ä–µ–º—è: {order['time']}"""
            
            order_label = MDLabel(
                text=order_info,
                halign="left",
                theme_text_color="Primary"
            )
            
            # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            buttons_layout = MDBoxLayout(
                orientation='horizontal',
                spacing=dp(10),
                size_hint_y=None,
                height=dp(50)
            )
            
            if order['status'] == '–ù–æ–≤—ã–π':
                accept_btn = MDRaisedButton(
                    text="–ü—Ä–∏–Ω—è—Ç—å",
                    size_hint_x=0.4,
                    md_bg_color=get_color_from_hex("#4CAF50"),
                    size_hint_y=None,
                    height=dp(40)
                )
                accept_btn.bind(on_press=lambda x, o=order: self.update_order_status(o, '–ì–æ—Ç–æ–≤–∏—Ç—Å—è'))
                
                reject_btn = MDRaisedButton(
                    text="–û—Ç–∫–ª–æ–Ω–∏—Ç—å",
                    size_hint_x=0.4,
                    md_bg_color=get_color_from_hex("#FF5722"),
                    size_hint_y=None,
                    height=dp(40)
                )
                reject_btn.bind(on_press=lambda x, o=order: self.update_order_status(o, '–û—Ç–∫–ª–æ–Ω–µ–Ω'))
                
                buttons_layout.add_widget(accept_btn)
                buttons_layout.add_widget(reject_btn)
            
            elif order['status'] == '–ì–æ—Ç–æ–≤–∏—Ç—Å—è':
                ready_btn = MDRaisedButton(
                    text="–ì–æ—Ç–æ–≤–æ",
                    size_hint_x=0.4,
                    md_bg_color=get_color_from_hex("#2196F3"),
                    size_hint_y=None,
                    height=dp(40)
                )
                ready_btn.bind(on_press=lambda x, o=order: self.update_order_status(o, '–ì–æ—Ç–æ–≤'))
                
                buttons_layout.add_widget(ready_btn)
            
            order_card.add_widget(order_label)
            if buttons_layout.children:
                order_card.add_widget(buttons_layout)
            
            content.add_widget(order_card)
        
        scroll.add_widget(content)
        
        main_layout.add_widget(toolbar)
        main_layout.add_widget(scroll)
        
        self.add_widget(main_layout)
    
    def update_order_status(self, order, new_status):
        self.show_dialog("–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω", f"–ó–∞–∫–∞–∑ {order['id']} —Ç–µ–ø–µ—Ä—å: {new_status}")
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        self.build_ui()
    
    def show_dialog(self, title, text):
        from kivymd.uix.button import MDRaisedButton
        
        dialog = MDDialog(
            title=title,
            text=text,
            size_hint=(0.8, 0.3),
            buttons=[
                MDRaisedButton(
                    text="OK",
                    md_bg_color=get_color_from_hex("#FF9800"),
                    on_release=lambda x: dialog.dismiss()
                )
            ]
        )
        dialog.open()
    
    def go_back(self):
        self.manager.current = 'dashboard'
    
    def on_enter(self):
        self.build_ui()